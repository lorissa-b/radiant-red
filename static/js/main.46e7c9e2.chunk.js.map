{"version":3,"sources":["pages/Home.jsx","pages/Moves.jsx","pages/Pokemon.jsx","pages/encounters/towns/CinnabarIsland.jsx","pages/encounters/Index.jsx","pages/encounters/routes/Route1.jsx","pages/encounters/routes/Route2.jsx","pages/encounters/routes/Route3.jsx","pages/encounters/routes/Route4.jsx","pages/encounters/routes/Route5.jsx","pages/encounters/routes/Route6.jsx","pages/encounters/routes/Route7.jsx","pages/encounters/routes/Route8.jsx","pages/encounters/routes/Route9.jsx","pages/encounters/routes/Route10.jsx","pages/encounters/routes/Route11.jsx","pages/encounters/routes/Route12.jsx","pages/encounters/routes/Route13.jsx","pages/encounters/routes/Route14.jsx","pages/encounters/routes/Route15.jsx","pages/encounters/routes/Route16.jsx","pages/encounters/routes/Route17.jsx","pages/encounters/routes/Route18.jsx","pages/encounters/routes/Route19.jsx","pages/encounters/routes/Route20.jsx","pages/encounters/routes/Route21.jsx","pages/encounters/routes/Route22.jsx","pages/encounters/routes/Route23.jsx","pages/encounters/routes/Route24.jsx","pages/encounters/routes/Route25.jsx","pages/encounters/caves/CeruleanCave.jsx","pages/encounters/caves/DiglettsCave.jsx","pages/encounters/caves/RockTunnel.jsx","pages/encounters/caves/SeafoamIslands.jsx","pages/encounters/caves/VictoryRoad.jsx","pages/encounters/caves/ViridianForest.jsx","pages/encounters/towns/PalletTown.jsx","pages/encounters/towns/ViridianCity.jsx","pages/encounters/towns/PewterCity.jsx","pages/encounters/towns/CeruleanCity.jsx","pages/encounters/towns/VermillionCity.jsx","pages/encounters/towns/LavenderTown.jsx","pages/encounters/towns/CeladonCity.jsx","pages/encounters/towns/SaffronCity.jsx","pages/encounters/towns/FuchsiaCity.jsx","pages/rosters/Easy.jsx","pages/rosters/Hard.jsx","pages/rosters/Index.jsx","Components/Main.jsx","Components/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","Moves","Pokemon","CinnabarIsland","AreaComponentMap","Route1","name","link","component","Route2","Route3","Route4","Route5","Route6","Route7","Route8","Route9","Route10","Route11","Route12","Route13","Route14","Route15","Route16","Route17","Route18","Route19","Route20","Route21","Route22","Route23","Route24","Route25","CeruleanCave","DiglettsCave","RockTunnel","SeafoamIslands","VictoryRoad","ViridianForest","PalletTown","ViridianCity","PewterCity","CeruleanCity","VermillionCity","LavenderTown","CeladonCity","SaffronCity","FuchsiaCity","Encounters","areas","Object","keys","map","key","exact","path","Index","links","MenuItem","value","to","Link","basename","Select","id","Easy","Hard","Rosters","Main","props","NavBar","AppBar","position","Toolbar","Typography","variant","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yQAWeA,MATf,WACI,OACI,oCACI,mDACA,mDCKGC,MATf,WACI,OACI,oCACI,qCACA,mDCKGC,MATf,WACI,OACI,oCACI,uCACA,mD,wBCKGC,IC2CTC,EAAmB,CACrBC,OAAQ,CACJC,KAAM,UACNC,KAAM,UACNC,UCxDR,WACI,OACI,oCACI,kDACA,oDDsDRC,OAAQ,CACJH,KAAM,UACNC,KAAM,UACNC,UE7DR,WACI,OACI,oCACI,iDACA,oDF2DRE,OAAQ,CACJJ,KAAM,UACNC,KAAM,UACNC,UGlER,WACI,OACI,oCACI,iDACA,oDHgERG,OAAQ,CACJL,KAAM,UACNC,KAAM,UACNC,UIvER,WACI,OACI,oCACI,iDACA,oDJqERI,OAAQ,CACJN,KAAM,UACNC,KAAM,UACNC,UK5ER,WACI,OACI,oCACI,iDACA,oDL0ERK,OAAQ,CACJP,KAAM,UACNC,KAAM,UACNC,UMjFR,WACI,OACI,oCACI,iDACA,oDN+ERM,OAAQ,CACJR,KAAM,UACNC,KAAM,UACNC,UOtFR,WACI,OACI,oCACI,iDACA,oDPoFRO,OAAQ,CACJT,KAAM,UACNC,KAAM,UACNC,UQ3FR,WACI,OACI,oCACI,iDACA,oDRyFRQ,OAAQ,CACJV,KAAM,UACNC,KAAM,UACNC,UShGR,WACI,OACI,oCACI,iDACA,oDT8FRS,QAAS,CACLX,KAAM,WACNC,KAAM,WACNC,UUrGR,WACI,OACI,oCACI,kDACA,oDVmGRU,QAAS,CACLZ,KAAM,WACNC,KAAM,WACNC,UW1GR,WACI,OACI,oCACI,kDACA,oDXwGRW,QAAS,CACLb,KAAM,WACNC,KAAM,WACNC,UY/GR,WACI,OACI,oCACI,kDACA,oDZ6GRY,QAAS,CACLd,KAAM,WACNC,KAAM,WACNC,UapHR,WACI,OACI,oCACI,kDACA,oDbkHRa,QAAS,CACLf,KAAM,WACNC,KAAM,WACNC,UczHR,WACI,OACI,oCACI,kDACA,oDduHRc,QAAS,CACLhB,KAAM,WACNC,KAAM,WACNC,Ue9HR,WACI,OACI,oCACI,kDACA,oDf4HRe,QAAS,CACLjB,KAAM,WACNC,KAAM,WACNC,UgBnIR,WACI,OACI,oCACI,kDACA,oDhBiIRgB,QAAS,CACLlB,KAAM,WACNC,KAAM,WACNC,UiBxIR,WACI,OACI,oCACI,kDACA,oDjBsIRiB,QAAS,CACLnB,KAAM,WACNC,KAAM,WACNC,UkB7IR,WACI,OACI,oCACI,kDACA,oDlB2IRkB,QAAS,CACLpB,KAAM,WACNC,KAAM,WACNC,UmBlJR,WACI,OACI,oCACI,kDACA,oDnBgJRmB,QAAS,CACLrB,KAAM,WACNC,KAAM,WACNC,UoBvJR,WACI,OACI,oCACI,kDACA,oDpBqJRoB,QAAS,CACLtB,KAAM,WACNC,KAAM,WACNC,UqB5JR,WACI,OACI,oCACI,kDACA,oDrB0JRqB,QAAS,CACLvB,KAAM,WACNC,KAAM,WACNC,UsBjKR,WACI,OACI,oCACI,kDACA,oDtB+JRsB,QAAS,CACLxB,KAAM,WACNC,KAAM,WACNC,UuBtKR,WACI,OACI,oCACI,kDACA,oDvBoKRuB,QAAS,CACLzB,KAAM,WACNC,KAAM,WACNC,UwB3KR,WACI,OACI,oCACI,kDACA,oDxByKRwB,QAAS,CACL1B,KAAM,WACNC,KAAM,WACNC,UyBhLR,WACI,OACI,oCACI,kDACA,oDzB8KRyB,aAAc,CACV3B,KAAM,gBACNC,KAAM,gBACNC,U0BrLR,WACI,OACI,oCACI,uDACA,oD1BmLR0B,aAAc,CACV5B,KAAM,iBACNC,KAAM,gBACNC,U2B1LR,WACI,OACI,oCACI,uDACA,oD3BwLR2B,WAAY,CACR7B,KAAM,cACNC,KAAM,cACNC,U4B/LR,WACI,OACI,oCACI,qDACA,oD5B6LR4B,eAAgB,CACZ9B,KAAM,kBACNC,KAAM,kBACNC,U6BpMR,WACI,OACI,oCACI,yDACA,oD7BkMR6B,YAAa,CACT/B,KAAM,eACNC,KAAM,eACNC,U8BzMR,WACI,OACI,oCACI,sDACA,oD9BuMR8B,eAAgB,CACZhC,KAAM,kBACNC,KAAM,kBACNC,U+B9MR,WACI,OACI,oCACI,yDACA,oD/B4MR+B,WAAY,CACRjC,KAAM,cACNC,KAAM,cACNC,UgCnNR,WACI,OACI,oCACI,qDACA,oDhCiNRgC,aAAc,CACVlC,KAAM,gBACNC,KAAM,gBACNC,UiCxNR,WACI,OACI,oCACI,uDACA,oDjCsNRiC,WAAY,CACRnC,KAAM,cACNC,KAAM,cACNC,UkC7NR,WACI,OACI,oCACI,qDACA,oDlC2NRkC,aAAc,CACVpC,KAAM,gBACNC,KAAM,gBACNC,UmClOR,WACI,OACI,oCACI,uDACA,oDnCgORmC,eAAgB,CACZrC,KAAM,kBACNC,KAAM,kBACNC,UoCvOR,WACI,OACI,oCACI,yDACA,oDpCqORoC,aAAc,CACVtC,KAAM,gBACNC,KAAM,gBACNC,UqC5OR,WACI,OACI,oCACI,uDACA,oDrC0ORqC,YAAa,CACTvC,KAAM,eACNC,KAAM,eACNC,UsCjPR,WACI,OACI,oCACI,wDACA,oDtC+ORsC,YAAa,CACTxC,KAAM,eACNC,KAAM,eACNC,UuCtPR,WACI,OACI,oCACI,sDACA,oDvCoPRuC,YAAa,CACTzC,KAAM,eACNC,KAAM,eACNC,UwC3PR,WACI,OACI,oCACI,sDACA,oDxCyPRL,eAAgB,CACZG,KAAM,kBACNC,KAAM,kBACNC,UDhQR,WACI,OACI,oCACI,yDACA,qDCgQZ,SAASwC,IACL,IAAMC,EAAQC,OAAOC,KAAK/C,GAAkBgD,KAAI,SAASC,GACrD,OAAO,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMnD,EAAiBiD,GAAK9C,KAAMC,UAAWJ,EAAiBiD,GAAK7C,eAG3F,OACI,kBAAC,IAAD,KACKyC,GAwBEO,MAnBf,WACI,IAAMC,EAAQP,OAAOC,KAAK/C,GAAkBgD,KAAI,SAASC,GACrD,OACI,kBAACK,EAAA,EAAD,CAAUC,MAAON,EAAKO,GAAIxD,EAAiBiD,GAAK9C,KAAMC,UAAWqD,KAC5DzD,EAAiBiD,GAAK/C,SAInC,OACI,kBAAC,IAAD,CAAYwD,SAAS,WACjB,kBAACC,EAAA,EAAD,CAAQC,GAAG,cAAcL,MAAM,UAC3B,kBAACD,EAAA,EAAD,CAAUC,MAAM,SAASC,GAAG,IAAIpD,UAAWqD,KAA3C,kBACCJ,GAEL,kBAACT,EAAD,QyCrRGiB,MATf,WACI,OACI,oCACI,4CACA,mDCKGC,MATf,WACI,OACI,oCACI,4CACA,mDCAZ,SAASC,IACL,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOb,OAAK,EAACC,KAAK,IAAI/C,UAAWyD,IACjC,kBAAC,IAAD,CAAOX,OAAK,EAACC,KAAK,QAAQ/C,UAAWyD,IACrC,kBAAC,IAAD,CAAOX,OAAK,EAACC,KAAK,QAAQ/C,UAAW0D,KAgBlCV,MAXf,WACI,OACI,kBAAC,IAAD,CAAYM,SAAS,YACjB,6CACA,kBAAC,IAAD,CAAMF,GAAG,SAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,QACA,kBAACO,EAAD,QCDGC,MAZf,SAAcC,GACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOf,OAAK,EAACC,KAAK,IAAI/C,UAAWR,IACjC,kBAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,SAAS/C,UAAWP,IACtC,kBAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,WAAW/C,UAAWN,IACxC,kBAAC,IAAD,CAAOqD,KAAK,UAAU/C,UAAWwC,IACjC,kBAAC,IAAD,CAAOO,KAAK,WAAW/C,UAAW2D,M,wBCK3BG,MAjBf,SAAgBD,GACZ,OACI,oCACI,kBAACE,EAAA,EAAD,CAAQC,SAAS,SACb,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMb,GAAG,KAAI,kBAACc,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBACb,kBAAC,IAAD,CAAMf,GAAG,UAAS,kBAACc,EAAA,EAAD,eAClB,kBAAC,IAAD,CAAMd,GAAG,YAAW,kBAACc,EAAA,EAAD,iBACpB,kBAAC,IAAD,CAAMd,GAAG,YAAW,kBAACc,EAAA,EAAD,iBACpB,kBAAC,IAAD,CAAMd,GAAG,WAAU,kBAACc,EAAA,EAAD,kBAG3B,kBAACD,EAAA,EAAD,QCFGG,MATf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.46e7c9e2.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Home() {\n    return (\n        <>\n            <h1>Pokemon Radiant Red</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Home;","import React from 'react';\n\nfunction Moves() {\n    return (\n        <>\n            <h1>Moves</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Moves;","import React from 'react';\n\nfunction Pokemon() {\n    return (\n        <>\n            <h1>Pokemon</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Pokemon;","import React from 'react';\n\nfunction CinnabarIsland() {\n    return (\n        <>\n            <h1>CinnabarIsland Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default CinnabarIsland;","import React from 'react';\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Select, MenuItem } from '@material-ui/core';\n\nimport {\n    Route1, \n    Route2, \n    Route3,\n    Route4,\n    Route5,\n    Route6,\n    Route7,\n    Route8,\n    Route9,\n    Route10,\n    Route11,\n    Route12,\n    Route13,\n    Route14,\n    Route15,\n    Route16,\n    Route17,\n    Route18,\n    Route19,\n    Route20,\n    Route21,\n    Route22,\n    Route23,\n    Route24,\n    Route25\n} from './routes';\n\nimport {\n    CeruleanCave,\n    DiglettsCave,\n    RockTunnel,\n    SeafoamIslands,\n    VictoryRoad,\n    ViridianForest\n} from './caves';\n\nimport {\n    PalletTown,\n    ViridianCity,\n    PewterCity,\n    CeruleanCity,\n    VermillionCity,\n    LavenderTown,\n    CeladonCity,\n    SaffronCity,\n    FuchsiaCity,\n    CinnabarIsland\n} from './towns';\n\nconst AreaComponentMap = {\n    Route1: {\n        name: 'Route 1',\n        link: '/route1',\n        component: Route1\n    },\n    Route2: {\n        name: 'Route 2',\n        link: '/route2',\n        component: Route2\n    },\n    Route3: {\n        name: 'Route 3',\n        link: '/route3',\n        component: Route3\n    },\n    Route4: {\n        name: 'Route 4',\n        link: '/route4',\n        component: Route4\n    },\n    Route5: {\n        name: 'Route 5',\n        link: '/route5',\n        component: Route5\n    },\n    Route6: {\n        name: 'Route 6',\n        link: '/route6',\n        component: Route6\n    },\n    Route7: {\n        name: 'Route 7',\n        link: '/route7',\n        component: Route7\n    },\n    Route8: {\n        name: 'Route 8',\n        link: '/route8',\n        component: Route8\n    },\n    Route9: {\n        name: 'Route 9',\n        link: '/route9',\n        component: Route9\n    },\n    Route10: {\n        name: 'Route 10',\n        link: '/route10',\n        component: Route10\n    }, \n    Route11: {\n        name: 'Route 11',\n        link: '/route11',\n        component: Route11\n    },\n    Route12: {\n        name: 'Route 12',\n        link: '/route12',\n        component: Route12\n    },\n    Route13: {\n        name: 'Route 13',\n        link: '/route13',\n        component: Route13\n    },\n    Route14: {\n        name: 'Route 14',\n        link: '/route14',\n        component: Route14\n    },\n    Route15: {\n        name: 'Route 15',\n        link: '/route15',\n        component: Route15\n    },\n    Route16: {\n        name: 'Route 16',\n        link: '/route16',\n        component: Route16\n    },\n    Route17: {\n        name: 'Route 17',\n        link: '/route17',\n        component: Route17\n    },\n    Route18: {\n        name: 'Route 18',\n        link: '/route18',\n        component: Route18\n    },\n    Route19: {\n        name: 'Route 19',\n        link: '/route19',\n        component: Route19\n    },\n    Route20: {\n        name: 'Route 20',\n        link: '/route20',\n        component: Route20\n    },\n    Route21: {\n        name: 'Route 21',\n        link: '/route21',\n        component: Route21\n    },\n    Route22: {\n        name: 'Route 22',\n        link: '/route22',\n        component: Route22\n    },\n    Route23: {\n        name: 'Route 23',\n        link: '/route23',\n        component: Route23\n    },\n    Route24: {\n        name: 'Route 24',\n        link: '/route24',\n        component: Route24\n    },\n    Route25: {\n        name: 'Route 25',\n        link: '/route25',\n        component: Route25\n    },\n    CeruleanCave: {\n        name: 'Cerulean Cave',\n        link: '/ceruleancave',\n        component: CeruleanCave\n    },\n    DiglettsCave: {\n        name: 'Diglett\\'s Cave',\n        link: '/diglettscave',\n        component: DiglettsCave\n    },\n    RockTunnel: {\n        name: 'Rock Tunnel',\n        link: '/rocktunnel',\n        component: RockTunnel\n    },\n    SeafoamIslands: {\n        name: 'Seafoam Islands',\n        link: '/seafoamislands',\n        component: SeafoamIslands\n    },\n    VictoryRoad: {\n        name: 'Victory Road',\n        link: '/victoryroad',\n        component: VictoryRoad\n    },\n    ViridianForest: {\n        name: 'Viridian Forest',\n        link: '/viridianforest',\n        component: ViridianForest\n    },\n    PalletTown: {\n        name: 'Pallet Town',\n        link: '/pallettown',\n        component: PalletTown\n    },\n    ViridianCity: {\n        name: 'Viridian City',\n        link: '/viridiancity',\n        component: ViridianCity\n    },\n    PewterCity: {\n        name: 'Pewter City',\n        link: '/pewtercity',\n        component: PewterCity\n    },\n    CeruleanCity: {\n        name: 'Cerulean City',\n        link: '/ceruleancity',\n        component: CeruleanCity\n    },\n    VermillionCity: {\n        name: 'Vermillion City',\n        link: '/vermillioncity',\n        component: VermillionCity\n    },\n    LavenderTown: {\n        name: 'Lavender Town',\n        link: '/lavendertown',\n        component: LavenderTown\n    },\n    CeladonCity: {\n        name: 'Celadon City',\n        link: '/celadoncity',\n        component: CeladonCity\n    },\n    SaffronCity: {\n        name: 'Saffron City',\n        link: '/saffroncity',\n        component: SaffronCity\n    },\n    FuchsiaCity: {\n        name: 'Fuchsia City',\n        link: '/fuchsiacity',\n        component: FuchsiaCity\n    },\n    CinnabarIsland: {\n        name: 'Cinnabar Island',\n        link: '/cinnabarisland',\n        component: CinnabarIsland\n    }\n}\n\nfunction Encounters() {\n    const areas = Object.keys(AreaComponentMap).map(function(key) {\n        return <Route exact path={AreaComponentMap[key].link} component={AreaComponentMap[key].component} /> \n    });\n\n    return (\n        <Switch>\n            {areas}\n        </Switch>\n    );\n}\n\nfunction Index(){\n    const links = Object.keys(AreaComponentMap).map(function(key) {\n        return (\n            <MenuItem value={key} to={AreaComponentMap[key].link} component={Link}>\n                {AreaComponentMap[key].name}\n            </MenuItem>\n        )\n    });\n    return (\n        <HashRouter basename=\"/routes\">\n            <Select id=\"area_select\" value=\"Route0\">\n                <MenuItem value=\"Route0\" to='/' component={Link}>Choose an Area</MenuItem>\n                {links}\n            </Select>\n            <Encounters />\n        </HashRouter>\n    )\n}\n\nexport default Index;","import React from 'react';\n\nfunction Route1() {\n    return (\n        <>\n            <h1>Route 1 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route1;","import React from 'react';\n\nfunction Route2() {\n    return (\n        <>\n            <h1>Route2 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route2;","import React from 'react';\n\nfunction Route3() {\n    return (\n        <>\n            <h1>Route3 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route3;","import React from 'react';\n\nfunction Route4() {\n    return (\n        <>\n            <h1>Route4 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route4;","import React from 'react';\n\nfunction Route5() {\n    return (\n        <>\n            <h1>Route5 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route5;","import React from 'react';\n\nfunction Route6() {\n    return (\n        <>\n            <h1>Route6 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route6;","import React from 'react';\n\nfunction Route7() {\n    return (\n        <>\n            <h1>Route7 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route7;","import React from 'react';\n\nfunction Route8() {\n    return (\n        <>\n            <h1>Route8 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route8;","import React from 'react';\n\nfunction Route9() {\n    return (\n        <>\n            <h1>Route9 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route9;","import React from 'react';\n\nfunction Route10() {\n    return (\n        <>\n            <h1>Route10 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route10;","import React from 'react';\n\nfunction Route11() {\n    return (\n        <>\n            <h1>Route11 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route11;","import React from 'react';\n\nfunction Route12() {\n    return (\n        <>\n            <h1>Route12 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route12;","import React from 'react';\n\nfunction Route13() {\n    return (\n        <>\n            <h1>Route13 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route13;","import React from 'react';\n\nfunction Route14() {\n    return (\n        <>\n            <h1>Route14 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route14;","import React from 'react';\n\nfunction Route15() {\n    return (\n        <>\n            <h1>Route15 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route15;","import React from 'react';\n\nfunction Route16() {\n    return (\n        <>\n            <h1>Route16 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route16;","import React from 'react';\n\nfunction Route17() {\n    return (\n        <>\n            <h1>Route17 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route17;","import React from 'react';\n\nfunction Route18() {\n    return (\n        <>\n            <h1>Route18 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route18;","import React from 'react';\n\nfunction Route19() {\n    return (\n        <>\n            <h1>Route19 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route19;","import React from 'react';\n\nfunction Route20() {\n    return (\n        <>\n            <h1>Route20 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route20;","import React from 'react';\n\nfunction Route21() {\n    return (\n        <>\n            <h1>Route21 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route21;","import React from 'react';\n\nfunction Route22() {\n    return (\n        <>\n            <h1>Route22 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route22;","import React from 'react';\n\nfunction Route23() {\n    return (\n        <>\n            <h1>Route23 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route23;","import React from 'react';\n\nfunction Route24() {\n    return (\n        <>\n            <h1>Route24 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route24;","import React from 'react';\n\nfunction Route25() {\n    return (\n        <>\n            <h1>Route25 Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Route25;","import React from 'react';\n\nfunction CeruleanCave() {\n    return (\n        <>\n            <h1>CeruleanCave Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default CeruleanCave;","import React from 'react';\n\nfunction DiglettsCave() {\n    return (\n        <>\n            <h1>DiglettsCave Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default DiglettsCave;","import React from 'react';\n\nfunction RockTunnel() {\n    return (\n        <>\n            <h1>RockTunnel Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default RockTunnel;","import React from 'react';\n\nfunction SeafoamIslands() {\n    return (\n        <>\n            <h1>SeafoamIslands Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default SeafoamIslands;","import React from 'react';\n\nfunction VictoryRoad() {\n    return (\n        <>\n            <h1>VictoryRoad Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default VictoryRoad;","import React from 'react';\n\nfunction ViridianForest() {\n    return (\n        <>\n            <h1>ViridianForest Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default ViridianForest;","import React from 'react';\n\nfunction PalletTown() {\n    return (\n        <>\n            <h1>PalletTown Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default PalletTown;","import React from 'react';\n\nfunction ViridianCity() {\n    return (\n        <>\n            <h1>ViridianCity Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default ViridianCity;","import React from 'react';\n\nfunction PewterCity() {\n    return (\n        <>\n            <h1>PewterCity Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default PewterCity;","import React from 'react';\n\nfunction CeruleanCity() {\n    return (\n        <>\n            <h1>CeruleanCity Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default CeruleanCity;","import React from 'react';\n\nfunction VermillionCity() {\n    return (\n        <>\n            <h1>VermillionCity Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default VermillionCity;","import React from 'react';\n\nfunction LavenderTown() {\n    return (\n        <>\n            <h1>LavenderTown Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default LavenderTown;","import React from 'react';\n\nfunction CeladadonCity() {\n    return (\n        <>\n            <h1>CeladadonCity Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default CeladadonCity;","import React from 'react';\n\nfunction SaffronCity() {\n    return (\n        <>\n            <h1>SaffronCity Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default SaffronCity;","import React from 'react';\n\nfunction FuchsiaCity() {\n    return (\n        <>\n            <h1>FuchsiaCity Encounters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default FuchsiaCity;","import React from 'react';\n\nfunction Easy() {\n    return (\n        <>\n            <h1>Easy Rosters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Easy;","import React from 'react';\n\nfunction Hard() {\n    return (\n        <>\n            <h1>Hard Rosters</h1>\n            <p>This is some text.</p>\n        </>\n    );\n}\n\nexport default Hard;","import React from 'react';\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport Easy from './Easy';\nimport Hard from './Hard';\n\nfunction Rosters() {\n    return (\n        <Switch>\n            <Route exact path='/' component={Easy}></Route>\n            <Route exact path='/easy' component={Easy}></Route>\n            <Route exact path='/hard' component={Hard}></Route>\n        </Switch>\n    )\n}\n\nfunction Index(){\n    return (\n        <HashRouter basename=\"/rosters\">\n            <h1>Hello Rosters</h1>\n            <Link to=\"/easy\">Easy</Link>\n            <Link to=\"/hard\">Hard</Link>\n            <Rosters />\n        </HashRouter>\n    )\n}\n\nexport default Index;","import React from \"react\";\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport Moves from '../pages/Moves';\nimport Pokemon from '../pages/Pokemon';\nimport { default as Encounters } from '../pages/encounters/Index';\nimport { default as Rosters } from '../pages/rosters/Index';\n\nfunction Main(props) {\n    return (\n      <Switch>\n        <Route exact path='/' component={Home}></Route>\n        <Route exact path='/moves' component={Moves}></Route>\n        <Route exact path='/pokemon' component={Pokemon}></Route>\n        <Route path='/routes' component={Encounters}></Route>\n        <Route path='/rosters' component={Rosters}></Route>\n      </Switch>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport { AppBar, Typography, Toolbar } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nfunction NavBar(props){\n    return (\n        <>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <Link to=\"/\"><Typography variant=\"h6\">Radiant Red</Typography></Link>\n                    <Link to=\"/moves\"><Typography>Moves</Typography></Link>\n                    <Link to=\"/pokemon\"><Typography>Pokemon</Typography></Link>\n                    <Link to=\"/rosters\"><Typography>Rosters</Typography></Link>\n                    <Link to=\"/routes\"><Typography>Routes</Typography></Link>\n                </Toolbar>\n            </AppBar>\n            <Toolbar />\n        </>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport './App.css';\nimport Main from \"./Components/Main\"\nimport NavBar from './Components/NavBar'\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}